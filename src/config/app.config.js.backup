// config/app.config.js - Main application configuration
export const APP_CONFIG = {
  // Application Info
  name: 'ProofPix',
  version: '1.0.0',
  description: 'Extract EXIF metadata from your images with complete privacy',
  
  // Analytics
  analytics: {
    googleAnalyticsId: process.env.REACT_APP_GA_ID || 'G-W1NLKX5B5S',
    enabled: process.env.NODE_ENV === 'production'
  },
  
  // Feature Flags
  features: {
    bulkProcessing: process.env.REACT_APP_BULK_PROCESSING === 'true' || false,
    advancedExif: process.env.REACT_APP_ADVANCED_EXIF === 'true' || true,
    pdfReports: process.env.REACT_APP_PDF_REPORTS === 'true' || true,
    gpsMapping: process.env.REACT_APP_GPS_MAPPING === 'true' || true,
    socialSharing: process.env.REACT_APP_SOCIAL_SHARING === 'true' || false,
    premiumFeatures: process.env.REACT_APP_PREMIUM === 'true' || false,
    documentAI: process.env.REACT_APP_DOCUMENT_AI === 'true' || false,
    enterpriseMode: process.env.REACT_APP_ENTERPRISE_MODE === 'true' || false,
    whiteLabel: process.env.REACT_APP_WHITE_LABEL === 'true' || false
  },
  
  // Environment
  isDevelopment: process.env.NODE_ENV === 'development',
  isProduction: process.env.NODE_ENV === 'production',
  
  // API Endpoints (for future use)
  api: {
    baseUrl: process.env.REACT_APP_API_URL || 'https://api.proofpixapp.com',
    timeout: parseInt(process.env.REACT_APP_API_TIMEOUT) || 10000
  },

  limits: {
    maxFileSize: 50 * 1024 * 1024, // 50MB
    supportedFormats: ['.jpg', '.jpeg', '.png', '.heic', '.tiff', '.webp']
  }
};

// Add these utility functions to the end of your config/app.config.js file

// Utility functions for configuration
export const getConfigValue = (path, defaultValue = null) => {
  const keys = path.split('.');
  let current = APP_CONFIG;
  
  for (const key of keys) {
    if (current && typeof current === 'object' && key in current) {
      current = current[key];
    } else {
      return defaultValue;
    }
  }
  
  return current;
};

export const isFeatureEnabled = (feature) => {
  return getConfigValue(`features.${feature}`, false);
};

