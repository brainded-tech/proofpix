name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      env:
        NODE_OPTIONS: "--openssl-legacy-provider"
    
    - name: Run type check
      run: npm run type-check
      env:
        NODE_OPTIONS: "--openssl-legacy-provider"
    
    - name: Run linting
      run: npm run lint
      env:
        NODE_OPTIONS: "--openssl-legacy-provider"
    
    - name: Run tests
      run: npm run test:ci
      env:
        NODE_OPTIONS: "--openssl-legacy-provider"
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      env:
        NODE_OPTIONS: "--openssl-legacy-provider"
    
    - name: Build
      run: npm run build
      env:
        CI: false
        GENERATE_SOURCEMAP: false
        NODE_OPTIONS: "--openssl-legacy-provider"
        NODE_ENV: production
    
    - name: Analyze bundle size
      run: npm run build:analyze
      env:
        NODE_OPTIONS: "--openssl-legacy-provider"
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: build/
        
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: build
        path: build/
    
    - name: Deploy to Railway (Staging)
      uses: railway/cli@v3
      with:
        railway-token: ${{ secrets.RAILWAY_TOKEN }}
      env:
        RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_STAGING_PROJECT_ID }}
        NODE_OPTIONS: "--openssl-legacy-provider"
        
  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: build
        path: build/
    
    - name: Deploy to Railway (Production)
      uses: railway/cli@v3
      with:
        railway-token: ${{ secrets.RAILWAY_TOKEN }}
      env:
        RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PRODUCTION_PROJECT_ID }}
        NODE_OPTIONS: "--openssl-legacy-provider" 