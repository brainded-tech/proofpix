# ProofPix Enterprise - Railway Deployment Commands

## Prerequisites
1. Install Railway CLI: npm install -g @railway/cli
2. Login to Railway: railway login
3. Ensure you're in the project root directory

## Initial Setup (One-time)
railway init
# Follow prompts to create new project or link existing

## Add PostgreSQL Database
railway add -d postgresql
# This creates a PostgreSQL database service

## Environment Variables Setup
railway variables set NODE_ENV=production
railway variables set PORT=5000
railway variables set DATABASE_URL='${{Postgres.DATABASE_URL}}'

## Deploy Backend API
railway up
# This deploys the current codebase

## Generate Public Domain
railway domain
# Creates a public URL for your API

## Useful Commands

# View deployment logs
railway logs

# Check service status
railway status

# Open Railway dashboard
railway open

# Connect to database
railway connect Postgres

# Run database migrations (when ready)
railway run npm run migrate

# Environment-specific deployments
railway up --environment production

## Production Checklist
1. ✅ PostgreSQL database added
2. ✅ Environment variables configured
3. ✅ API server deployed
4. ✅ Public domain generated
5. ✅ Health check endpoint working
6. ✅ API documentation accessible

## Testing Deployment
curl https://your-app.railway.app/health
curl https://your-app.railway.app/api/docs

## Monitoring
railway logs --follow
railway metrics

## Rollback (if needed)
railway rollback

## Custom Domain Setup (Optional)
railway domain add your-custom-domain.com

## Database Management
railway connect Postgres
# Then run SQL commands or use GUI tools

## Scaling (Enterprise)
railway scale --replicas 3
railway scale --memory 2GB
railway scale --cpu 2

## Security Notes
- All environment variables are encrypted
- HTTPS is automatically enabled
- Database connections are secured
- API rate limiting is configured

## Support
- Railway Docs: https://docs.railway.app
- ProofPix API Docs: https://your-app.railway.app/api/docs
